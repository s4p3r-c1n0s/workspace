import java.sql.*;
import java.util.*;


class DOA {
	private Connection conn ;
	private String url ;
	private String dbName ;
	private String driver ;
	private String userName ;
	private String passwd ;
	
	static DOA doa = new DOA(); 
	static boolean connected = false;
	private DOA(){
		conn = null;
		url = "jdbc:mysql://localhost:3306/";
		dbName = "LL_JAVA";
		driver = "com.mysql.jdbc.Driver";
		userName = "root";
		passwd = "umangjeet";
	}
	static DOA getObject(){
		return doa;
	}
	private void makeConnection() throws SQLException{
		if(!connected){
			try {
				Class.forName(driver).newInstance();
				conn = DriverManager.getConnection(url+dbName,userName,passwd);	  
				System.out.println("Connected to the database");
				connected = true;
			} catch (Exception e) {
				e.printStackTrace();
				}
			
		}
	}
	private void breakConnection() throws SQLException{
		if(connected){
			conn.close();
			System.out.println("Disconnected from database");
			connected = false;
		}
	}
	 
	public void addStudent(Student student) throws SQLException{
		makeConnection();
		String str = "insert into students value(null,?,?,?);";
		PreparedStatement ps = conn.prepareStatement(str);
		ps.setString(1, student.getName());
		ps.setInt(2,student.getMarks());
		ps.setString(3,student.getGrade()+"");
		Iterator<Address> it = student.getAddressList().iterator();
		while(it.hasNext()){
			addAddress(it.next());
		}
		if(ps.executeUpdate()==0)
			System.out.println("Student Not Added");
		else
			System.out.println("Student Added");
		breakConnection();
	}
	public void addAddress(Address address) throws SQLException{
		makeConnection();
		String str = "insert into addresses value(null,?,?,?);";
		PreparedStatement ps = conn.prepareStatement(str);
		ps.setString(1, address.getStreet());
		ps.setString(2,address.getCity());
		ps.setInt(3,address.getPincode());
		if(ps.executeUpdate()==0)
			System.out.println("Address Not Added");
		else
			System.out.println("Address Added");
		breakConnection();
	}	
	public void viewOneAddress(int id) throws SQLException{
		makeConnection();
		Statement stmt = conn.createStatement();
		ResultSet rs= stmt.executeQuery("select * from addresses where id = "+id);
		GUIAddress guiAddress = new GUIAddress();
		if(rs.next()){ 
			guiAddress.getAddressObject().setStreet(rs.getString("street"));
			guiAddress.getAddressObject().setCity(rs.getString("city"));
			guiAddress.getAddressObject().setPincode(rs.getInt("pincode"));
			guiAddress.getAll();
		}
		breakConnection();
	}
	public void viewAllAddresses() throws SQLException{
		makeConnection();
		Statement stmt = conn.createStatement();
		ResultSet rs= stmt.executeQuery("select * from addresses");
		GUIAddress guiAddress = new GUIAddress();
		while(rs.next()){
			guiAddress.getAddressObject().setStreet(rs.getString("street"));
			guiAddress.getAddressObject().setCity(rs.getString("city"));
			guiAddress.getAddressObject().setPincode(rs.getInt("pincode"));
			guiAddress.getAll();
		}
		breakConnection();
	}
	public void viewOneStudent(int id) throws SQLException{
		makeConnection();
		Statement stmt = conn.createStatement();
		ResultSet rs= stmt.executeQuery("select * from students where id = "+id);
		GUIStudent guiStudent = new GUIStudent();
		if(rs.next()){
			guiStudent.getStudentObject().setName(rs.getString("name"));
			guiStudent.getStudentObject().setMarks(rs.getInt("marks"));
			guiStudent.getStudentObject().setGrade(rs.getString("grade").charAt(0));
			guiStudent.getAll();
		}
		breakConnection();
	}
	public void viewAllStudents() throws SQLException{
		makeConnection();
		Statement stmt = conn.createStatement();
		ResultSet rs= stmt.executeQuery("select * from students");
		GUIStudent guiStudent = new GUIStudent();
		while(rs.next()){
			guiStudent.getStudentObject().setName(rs.getString("name"));
			guiStudent.getStudentObject().setMarks(rs.getInt("marks"));
			guiStudent.getStudentObject().setGrade(rs.getString("grade").charAt(0));
			guiStudent.getAll();
		}
		breakConnection();
	}
	public void deleteFromAddresses(int id) throws SQLException{
		makeConnection();
		String str = "delete from addresses where id = "+id+"";
		PreparedStatement ps = conn.prepareStatement(str);
		if(ps.executeUpdate()==0)
			System.out.println("Address Not Deleted");
		else
			System.out.println("Address Deleted");
		breakConnection();
	}
	public void deleteFromStudents(int id) throws SQLException{
		makeConnection();
		String str = "delete from students where id = "+id+"";
		PreparedStatement ps = conn.prepareStatement(str);
		if(ps.executeUpdate()==0)
			System.out.println("Student Not Deleted");
		else{
			System.out.println("Student Deleted");
			ArrayList<Integer> addressIdList = getAddressesForStudent(id);
			Iterator<Integer> it = addressIdList.iterator();
			while(it.hasNext()){
				deleteFromAddresses(it.next());
			}
		}
		breakConnection();
	}
	public ArrayList<Integer> getAddressesForStudent(int studentId) throws SQLException{
		makeConnection();
		Statement stmt = conn.createStatement();
		ResultSet rs= stmt.executeQuery("select id from addresses where sid = "+studentId);
		ArrayList<Integer> addressIdList = new ArrayList<Integer>();
		while(rs.next()){
			addressIdList.add(rs.getInt("id"));
		}
		breakConnection();
		return addressIdList;
	}
}